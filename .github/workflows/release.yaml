name: Release

on:
    push:
        branches:
            - main
            - beta
            - alpha
            - next
            - next-major
        tags:
            - '*'
    pull_request:
        branches:
            - main
            - beta
            - alpha
            - next
            - next-major
        tags:
            - '*'

env:
    GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout project
                uses: actions/checkout@v3
                with:
                    persist-credentials: false

            -   uses: bahmutov/npm-install@v1

            -   name: Semantic Release
                uses: cycjimmy/semantic-release-action@v3
                with:
                    semantic_version: 19
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    provide_packages_json:
        # see json juggling: https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#example-6
        # see https://stackoverflow.com/a/62953566/1348344
        needs: release

        runs-on: ubuntu-latest

        if: "endsWith(github.ref, 'main')"

        steps:
            -   uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none

            -   name: Install Dependencies
                uses: ramsey/composer-install@v2

            # get package json list
            -   name: Output list packages as JSON
                id: output_data
                run: echo "::set-output name=matrix::$(vendor/bin/monorepo-builder packages-json)"

        # this step is needed, so the output gets to the next defined job
        outputs:
            matrix: ${{ steps.output_data.outputs.matrix }}

    split_monorepo:
        needs: provide_packages_json

        runs-on: ubuntu-latest

        strategy:
            fail-fast: false

            matrix:
                # define package to repository map
                package: ${{fromJson(needs.provide_packages_json.outputs.matrix)}}

        steps:
            -   uses: actions/checkout@v2

            # no tag
            -   if: "!startsWith(github.ref, 'refs/tags/')"
                uses: "symplify/monorepo-split-github-action@2.1"
                name: Monorepo Split of ${{ matrix.package }}
                with:
                    # ↓ split "packages/[local_path]" directory
                    package_directory: 'packages/${{ matrix.package }}'

                    # ↓ into locomotive-charcoal/[split_repository] repository
                    repository_organization: 'locomotive-charcoal'
                    repository_name: '${{ matrix.package }}'

                    # [optional, with "github.com" as default]
                    #repository_host: git.private.com:1234

                    # ↓ the user signed under the split commit
                    user_name: "GitHub Action"
                    user_email: "action@github.com"
                    branch: "main"

            # with tag
            -   if: "startsWith(github.ref, 'refs/tags/')"
                uses: "symplify/monorepo-split-github-action@2.1"
                name: Monorepo Tagged Split of ${{ matrix.package }}
                with:
                    tag: ${GITHUB_REF#refs/tags/}

                    # ↓ split "packages/[local_path]" directory
                    package_directory: 'packages/${{ matrix.package }}'

                    # ↓ into locomotive-charcoal/[split_repository] repository
                    repository_organization: 'locomotive-charcoal'
                    repository_name: '${{ matrix.package }}'

                    # [optional, with "github.com" as default]
                    #repository_host: git.private.com:1234

                    # ↓ the user signed under the split commit
                    user_name: "GitHub Action"
                    user_email: "action@github.com"
                    branch: "main"

